/* ----------------------- Table -------------------------- */ 

import React, { useState } from "react";
import "./callList.css"; // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å—Ç–∏–ª–µ–π

const CallList = () => {
  // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
  const [calls, setCalls] = useState([
    { id: 1, type: "incoming", date: "04.07.2022 16:41", phone: "+7 900 000-00-00", duration: "00:00", record: true, contact: "–ú–∏—Ö–∞–π–ª–æ–≤–∞ –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞", deal: "–î–∏–∑–∞–π–Ω –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã" },
    { id: 2, type: "outgoing", date: "04.07.2022 16:37", phone: "+7 900 000-00-00", duration: "01:52", record: true, contact: "Simplex", deal: "–î–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç –¥–ª—è —Å—Ç—É–¥–∏–∏" },
  ]);

  const [filter, setFilter] = useState("");
  const [currentPage, setCurrentPage] = useState(1);
  const pageSize = 10;

  const [newCall, setNewCall] = useState({
    type: "incoming",
    date: "",
    phone: "",
    duration: "",
    record: false,
    contact: "",
    deal: "",
  });

  const [isAdding, setIsAdding] = useState(false);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∏–º–µ–Ω–∏
  const filteredCalls = calls.filter(
    (call) =>
      call.phone.includes(filter) || call.contact.toLowerCase().includes(filter.toLowerCase())
  );

  // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const startIndex = (currentPage - 1) * pageSize;
  const currentCalls = filteredCalls.slice(startIndex, startIndex + pageSize);

  const totalPages = Math.ceil(filteredCalls.length / pageSize);

  const addCall = () => {
    setCalls([...calls, { id: calls.length + 1, ...newCall }]);
    setIsAdding(false);
    setNewCall({
      type: "incoming",
      date: "",
      phone: "",
      duration: "",
      record: false,
      contact: "",
      deal: "",
    });
  };

  return (
    <div className="call-container">
      <h2 className="call-heading">–°–ø–∏—Å–æ–∫ –∑–≤–æ–Ω–∫–æ–≤</h2>
      <div className="filters">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫"
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
          className="filter-input"
        />
        <button className="filter-button">–ù–µ—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä</button>
        <button className="add-button" onClick={() => setIsAdding(true)}>
          –î–æ–±–∞–≤–∏—Ç—å
        </button>
      </div>
      <table className="call-table">
        <thead>
          <tr>
            <th>–¢–∏–ø</th>
            <th>–ù–∞—á–∞–ª–æ</th>
            <th>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</th>
            <th>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</th>
            <th>–ó–∞–ø–∏—Å—å</th>
            <th>–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç</th>
            <th>–°–¥–µ–ª–∫–∞</th>
          </tr>
        </thead>
        <tbody>
          {currentCalls.map((call) => (
            <tr key={call.id}>
              <td>{call.type === "incoming" ? "üìû –í—Ö–æ–¥—è—â–∏–π" : "üì§ –ò—Å—Ö–æ–¥—è—â–∏–π"}</td>
              <td>{call.date}</td>
              <td>{call.phone}</td>
              <td>{call.duration}</td>
              <td>{call.record ? "‚ñ∂Ô∏è" : "-"}</td>
              <td>{call.contact}</td>
              <td>{call.deal}</td>
            </tr>
          ))}
        </tbody>
      </table>
      <div className="pagination">
        <button
          disabled={currentPage === 1}
          onClick={() => setCurrentPage((prev) => prev - 1)}
        >
          –ù–∞–∑–∞–¥
        </button>
        {Array.from({ length: totalPages }, (_, i) => (
          <button
            key={i}
            className={currentPage === i + 1 ? "active" : ""}
            onClick={() => setCurrentPage(i + 1)}
          >
            {i + 1}
          </button>
        ))}
        <button
          disabled={currentPage === totalPages}
          onClick={() => setCurrentPage((prev) => prev + 1)}
        >
          –í–ø–µ—Ä–µ–¥
        </button>
      </div>

      {isAdding && (
        <div className="add-form">
          <h3>–î–æ–±–∞–≤–∏—Ç—å –∑–≤–æ–Ω–æ–∫</h3>
          <form
            onSubmit={(e) => {
              e.preventDefault();
              addCall();
            }}
          >
            <select
              value={newCall.type}
              onChange={(e) => setNewCall({ ...newCall, type: e.target.value })}
            >
              <option value="incoming">–í—Ö–æ–¥—è—â–∏–π</option>
              <option value="outgoing">–ò—Å—Ö–æ–¥—è—â–∏–π</option>
            </select>
            <input
              type="text"
              placeholder="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è"
              value={newCall.date}
              onChange={(e) => setNewCall({ ...newCall, date: e.target.value })}
              required
            />
            <input
              type="text"
              placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
              value={newCall.phone}
              onChange={(e) => setNewCall({ ...newCall, phone: e.target.value })}
              required
            />
            <input
              type="text"
              placeholder="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
              value={newCall.duration}
              onChange={(e) => setNewCall({ ...newCall, duration: e.target.value })}
            />
            <input
              type="text"
              placeholder="–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç"
              value={newCall.contact}
              onChange={(e) => setNewCall({ ...newCall, contact: e.target.value })}
            />
            <input
              type="text"
              placeholder="–°–¥–µ–ª–∫–∞"
              value={newCall.deal}
              onChange={(e) => setNewCall({ ...newCall, deal: e.target.value })}
            />
            <button type="submit" className="add-form-button">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </button>
            <button
              type="button"
              onClick={() => setIsAdding(false)}
              className="cancel-button"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          </form>
        </div>
      )}
    </div>
  );
};

export default CallList;